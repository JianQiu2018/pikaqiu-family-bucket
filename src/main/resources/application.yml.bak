#日志级别
logging:
  level:
    com.pikaqiu.weixinapplet: debug

#spring:
#  datasource:
#    # 动态数据源配置
#    master:
#      url: jdbc:mysql://xx.xx.xx.xx:xxxx/xxxx?useUnicode=true&characterEncoding=utf-8&useSSL=false&zeroDateTimeBehavior=round
#      username: xxxx
#      password: xxxx
#      type: com.zaxxer.hikari.HikariDataSource
#    cluster:
#      # - 代表list语法
#    - key: slave
#      url: jdbc:mysql://xx.xx.xx.xx:3306/xxxx?useUnicode=true&characterEncoding=utf-8&useSSL=false&zeroDateTimeBehavior=round
#      username: xxxx
#      password: xxxx
#      type: com.zaxxer.hikari.HikariDataSource

spring:  #集成ByteTcc分布式事务框架，只能使用单数据源，不支持动态数据源
  datasource:
    url: jdbc:mysql://xx.xx.xx.xx:3306/xxxx?useUnicode=true&characterEncoding=utf-8&useSSL=false&zeroDateTimeBehavior=round&autoReconnect=true
    username: xxxx
    password: xxxx
    type: org.apache.commons.dbcp2.BasicDataSource  #必须制定type类型，不然会报错
  # 缓冲10s,优雅停机
  lifecycle:
    timeout-per-shutdown-phase: 10s
  #JPA配置
  jpa:
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
    hibernate:
      ddl-auto: update #仅在第一次创建数据库表使用
  security:
    user:
      name: xxxx
      password: xxxx
  redis:
    host: xx.xx.xx.xx
    port: 6379
    password: xxxxx
    maxActive: 300
    maxIdle: 100
    maxWait: 50000
  #开启 Elasticsearch 仓库(默认值:true)
  #9200作为Http协议，主要用于外部通讯;9300作为Tcp协议，jar之间就是通过tcp协议通讯;ES集群之间是通过9300进行通讯
  elasticsearch:
    rest:
      uris: ["xx.xx.xx.xx:9200"]
      connection-timeout: 500000
  data:
    redis:
      repositories:
        enabled: false
    elasticsearch:
      repositories:
        enabled: true
  rabbitmq:
    host: xx.xx.xx.xx
    port: 5672
    username: admin
    password: 123456
    addresses: xx.xx.xx.xx:5672
    publisher-returns: true
    publisher-confirm-type: correlated # 开启Rabbitmq发送消息确认机制，发送消息到队列并触发回调方法
    listener:
      simple:
        concurrency: 10 #消费者数量
        max-concurrency: 10 #最大消费者数量
        prefetch: 20 #限流（消费者每次从队列获取的消息数量,默认的QoSprefetch设置为客户端提供了无限的 缓冲区）
        auto-startup: true  #启动时自动启动容器
        acknowledge-mode: manual #开启ACK手动确认模式
        retry:
          enabled: true #开启消费者(程序出现异常的情况下会,捕获异常重试将不生效)进行重试
          max-attempts: 2 #最大重试次数
          max-interval: 20 #最大间隔时间
          initial-interval: 3000 #重试间隔时间 3秒
          multiplier: 3 #重试间隔*乘子得出下次重试间隔  3s  6s  12s  24s  此处24s>20s  走20s
        default-requeue-rejected: false


eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
  instance:
    #多网卡定制IP,docker部署推荐
    prefer-ip-address: true

file:
  uploadPath: /work/files/static/images/
  domain: http://pkqing.cn/


common:
  id:
    dataCenterId: 0
    workId: ${random.int[1,30]}
  property:
    desc: "我就是个描述"
    name: "hello,pikaqiu"

#配置接口地址可放行
authorization:
  interceptor:
    ignored-url: /api/admin/authUser/**,/api/admin/article/**,/api/admin/music/**,/api/admin/upload/**,/api/admin/carouselPic/**,/api/home/**,/api/byteTcc/**,/api/admin/articleEs/**
